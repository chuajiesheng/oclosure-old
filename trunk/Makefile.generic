.PHONY: clean all var

# You can set OBROWSER_PATH if ocamlfind cannot find it
# Example: OBROWSER_PATH=~/local/src/obrowser/rt/caml

OBROWSER_PATH?=$(shell ocamlfind query obrowser)
LIB=$(OBROWSER_PATH)
INCLUDES= -I ../disposable -I ../events -I ../positioning -I ../ui -I ../dom -I ../asserts
OCAMLFLAGS= $(INCLUDES)
ROOT?=../..
#Where to find pa_object_bindings file
PA_PATH=$(ROOT)/syntax
PA_ML=$(PA_PATH)/pa_object_bindings.ml
PA_CMO=$(PA_ML:.ml=.cmo)

#input *_in.ml
#ouput *.cmo *_gen.js
#Exemple TreeControl_in.ml -> TreeControl.cmo & TreeControl_gen.js
FILE=$(wildcard *_in.ml)
TARGET=$(FILE:_in.ml=.cmo)
TARGET2=$(FILE:_in.ml=.cma)
#We want *.cmo (and *.ml)
all: $(TARGET) $(TARGET2) $(TARGET:.cmo=.ml)


$(PA_CMO): $(PA_ML)
	@cd $(PA_PATH);${MAKE}

%.js: %.ml
%.ml: %_in.ml $(PA_CMO)
	@camlp4of $(PA_CMO) -js $*_gen.js -impl $< -o $@

#No used
%.o: %.c
	@echo "[CC] $@"
	@CAMLLIB=$(LIB) ocamlc -c $<

%.cmo: %.ml
	@echo "[CC] $@"
	@CAMLLIB=$(LIB) ocamlc $(OCAMLFLAGS) -c $<
%.cma: %.cmo
	@echo "[CMA] $@"
	@CAMLLIB=$(LIB) ocamlc $(OCAMLFLAGS) -a $< -o $@

ui.cma: $(TARGET)
	CAMLLIB=$(LIB) ocamlmklib $^ -o $(basename $@)

#Check Some Variables
var:
	@echo [Obrowser Path] = $(LIB)
	@echo [Targets] = $(TARGET)
	@echo [Files] = $(FILE)
clean:
	@echo [Clean] $(PWD)
	@rm -Rf .depend *_gen.js *.cmo *.cmi *.o $(TARGET) $(TARGET:.cmo=.ml) $(PA_CMO)

depend:$(FILE:_in.ml=.ml)
	@ocamldep $(INCLUDES) $(FILE:_in.ml=.ml) > .depend
-include .depend
